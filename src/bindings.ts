/* eslint-disable */
// This file was generated by [tauri-specta](https://github.com/oscartbeaumont/tauri-specta). Do not edit this file manually.

declare global {
    interface Window {
        __TAURI_INVOKE__<T>(cmd: string, args?: Record<string, unknown>): Promise<T>;
    }
}

// Function avoids 'window not defined' in SSR
const invoke = () => window.__TAURI_INVOKE__;

export function startListening() {
    return invoke()<null>("start_listening")
}

export function tcpConnect(address: string, port: number) {
    return invoke()<null>("tcp_connect", { address,port })
}

export function getClipboardHistory() {
    return invoke()<ClipboardData[]>("get_clipboard_history")
}

export function deleteClipboardHistory(uuid: string) {
    return invoke()<null>("delete_clipboard_history", { uuid })
}

export function copyClipboardFrom(uuid: string) {
    return invoke()<null>("copy_clipboard_from", { uuid })
}

export function saveAppData() {
    return invoke()<null>("save_app_data")
}

export function deleteAppData() {
    return invoke()<null>("delete_app_data")
}

export function getImageAsBase64(fileName: string) {
    return invoke()<string>("get_image_as_base64", { fileName })
}

export type ClipboardData = { uuid: string; data_type: ClipboardType; data: string; datetime: string }
export type ClipboardType = "Text" | "Image" | "File"
